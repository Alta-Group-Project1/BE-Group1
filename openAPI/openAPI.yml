openapi: 3.0.3
info:
  version: 1.0.0
  title: EventApp
  description: Aplikasi Planning Event
  contact:
    name: Group1
    email: support@alterra.id
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/faizalsundara/Kelompok1/1.0.0
  - url: https://live-event.social/
    description: requestMethod
tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User data management
  - name: Events
    description: Event data management
  - name: Attandees
    description: Attandees data management
  - name: Comments
    description: Comments data management
 
paths:
  /login:
    post:
      tags:
        - Auth
      description: Login user bisa digunakan ketika user sudah registrasi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  email: "andrigunawan@gmail.com",
                  password: "andri12"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "LOGIN SUCCESS",
                    data: {
                      "user_name": "andri gunawan",
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co"
                    }
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "email or password incorrect"
                  }
  /users:
    post:
      tags:
        - Users
      description: Saat registrasi user harus input semua field
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestRegistrasi'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "full_name": "andri gunawan",
                  "user_name": "andri",
                  "email": "andrigunawan@gmail.com",
                  "password": "andri12",
                  "phone_number": "08123247689",
                  "address": "Jln. Baru No.4, Jakarta - Indonesia",
                  "file": "profile.png"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to insert data",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "all input must be filled",
                  }
    get:
      tags:
        - "Users"
      description: Bisa diaplikasikan ketika user ingin melihat profilnya
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
              
                    message: "success",
                    status: "succes",
                    data: {
                     "id"     : 1,
                     "full_name": "andri gunawan",
                     "user_name": "andri",
                     "email": "andrigunawan@gmail.com",
                     "phone_number": "08123247689",
                     "address": "Jln. Baru No.4, Jakarta - Indonesia",
                     "created_at": "2022-06-27T05:56:50.248Z",
                     "image_url": "https://storage.googleapis.com/bucket-project-3/profil1.jpg"
                    }
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    message: "missing or malformed jwt",
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    message: "Bad Request",
                  }
        '401':
          description: unauthorized
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    message: "missing or malformed jwt",
                  }
    put:
      tags:
        - Users
      description: Bisa diaplikasikan ketika user ingin update profilnya
      security:
        - JWTAuth: []     
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestUpdate'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "full_name": "andri gunawan",
                  "user_name": "andri",
                  "email": "andrigunawan@gmail.com",
                  "password": "andri12",
                  "phone_number": "08123247689",
                  "address": "Jln. Baru No.4, Jakarta - Indonesia",
                  "file": "new-profil1.jpg"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success update data",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to update data",
                  }
                responseData2:
                  description: when token is empty
                  value: {
                    message: "missing or malformed jwt"
                  }
    delete:
      tags:
        - Users
      description: Bisa diaplikasikan ketika user ingin menghapus profilnya
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to delete user",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "message": "Bad Request",
                  }
                responseData2:
                  description: when token is empty
                  value: {
                    message: "missing or malformed jwt"
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "status": "error",
                    "message": "failed to delete user",
                  }
  /events:
    post:
      tags:
        - Events
      description: User bisa membuat sebuah Event
      security:
        - JWTAuth: []
      requestBody:
        content:
          mulipart/form-data:
            schema:
              $ref: '#/components/schemas/requestEvent'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "event_name": "Konser Sheila On 7",
                  "id_user": "1",
                  "date_start": "05/07/2022",
                  "date_finish": "05/07/2022",
                  "start_at": "13.00",
                  "finish_at": "18.00",
                  "price": 150000,
                  "address": "Stadion GBK - Jakarta",
                  "description": "Konser dihadiri oleh SO7 dan artis-artis lainnya",
                  "file": "event1.jpg",
                  "capacity": 5000,
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to insert event",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "all input must be filled",
                  }
                responseData2:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
    get:
      tags:
        - "Events"
      description: Menampilkan semua event yang ada
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
            example: 1
          description: limit
        - in: query
          name: offset
          required: false
          schema:
            type: number
            example: 1
          description: offset
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseEventSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get all data",
                    data: {
                      data: [{
                        "id": "1",
                        "event_name": "Konser Sheila On 7",
                        "date_start": "05/07/2022",
                        "date_finish": "05/07/2022",
                        "start_at": "13.00",
                        "finish_at": "18.00",
                        "price": 150000,
                        "address": "Stadion GBK - Jakarta",
                        "description": "Konser dihadiri oleh SO7 dan artis-artis lainnya",
                        "image_url": "https://storage.googleapis.com/bucket-project-3/new-event1.jpg",
                        "capacity": 5000,
                        "created_at": "2022-06-27T05:56:50.248Z",
                        "user": {
                          "id": 1,
                          "full_name": "Andri Gunawan"
                        }
                      }],
                      "total_page": 1
                    }
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get all data",
                  }
  /events/{idEvent}:
    put:
      tags:
        - Events
      description: Bisa diaplikasikan ketika user ingin update/edit event
      security:
        - JWTAuth: []  
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestEvent'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  "event_name": "Konser Sheila On 7",
                  "date_start": "05/07/2022",
                  "date_finish": "05/07/2022",
                  "start_at": "13.00",
                  "finish_at": "18.00",
                  "price": 150000,
                  "address": "Stadion GBK - Jakarta",
                  "description": "Konser dihadiri oleh SO7 dan artis-artis lainnya",
                  "file": "new-event1.jpg",
                  "capacity": 5000,
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to update event",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to update event",
                  }
                responseData2:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
    get:
      tags:
        - "Events"
      description: Bisa diaplikasikan ketika user ingin melihat event yang dibuatnya
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseEventSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get data",
                    data: {
                      "id": "1",
                      "event_name": "Konser Sheila On 7",
                      "date_start": "05/07/2022",
                      "date_finish": "05/07/2022",
                      "start_at": "13.00",
                      "finish_at": "18.00",
                      "price": 150000,
                      "address": "Stadion GBK - Jakarta",
                      "description": "Konser dihadiri oleh SO7 dan artis-artis lainnya",
                      "image_url": "https://storage.googleapis.com/bucket-project-3/new-event1.jpg",
                      "capacity": 5000,
                      "created_at": "2022-07-07T02:46:10.595Z",
                      "user": {
                        "id": 1,
                        "full_name": "Andri Gunawan"
                      }
                    }
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to recognize id",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get data",
                  }
    
    delete:
      tags:
        - Events
      description: Bisa diaplikasikan ketika user ingin menghapus event yang dibuatnya
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "succes",
                    "message": "success to delete event",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "status": "error",
                    "message": "failed to recognize id",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "status": "error",
                    "message": "failed to delete event",
                  }
  /events/mylists:
    get:
      tags:
        - "Events"
      description: Bisa diaplikasikan ketika user ingin melihat event yang dibuatnya
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
            example: 1
          description: limit
        - in: query
          name: offset
          required: false
          schema:
            type: number
            example: 1
          description: offset
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseEventSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get all data",
                    data: 
                    [{
                      "id": "1",
                      "event_name": "Konser Sheila On 7",
                      "date_start": "05/07/2022",
                      "date_finish": "05/07/2022",
                      "start_at": "13.00",
                      "finish_at": "18.00",
                      "price": 150000,
                      "address": "Stadion GBK - Jakarta",
                      "description": "Konser dihadiri oleh SO7 dan artis-artis lainnya",
                      "image_url": "https://storage.googleapis.com/bucket-project-3/new-event1.jpg",
                      "capacity": 5000,
                      "created_at": "2022-07-07T02:46:10.595Z",
                      "user": {
                        "id": 1,
                        "full_name": "Andri Gunawan"
                      }
                    }]
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: when token empty
                  value: {
                    status: "error",
                    message: "failed to get all data",
                  }

  /attendees/events/{idEvent}:
    post:
      tags:
        - Attandees
      description: ketika User join sebuah event
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "Success to insert Attendee",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "already join this event",
                  }
                responseData2:
                  description: response failed 1
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to insert attendee",
                  }
    get:
      tags:
        - "Attandees"
      description: Bisa diaplikasikan ketika melihat attendees(users dan event yang diikutinya)
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseToSeeAttandees'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get data",
                    data: 
                    [{
                      "id": 1,
                      "user": {
                        "id": 1,
                        "user_name": "Andri",
                        "image_url": "https://storage.googleapis.com/bucket/default_profile.png",
                      },
                      "event": {
                        "id": 2,
                        "event_name": "Prambanan Jazz 2022"
                      }  
                    },
                    {
                      "id": 2,
                      "user": {
                        "id": 2,
                        "user_name": "Galih",
                        "image_url": "https://storage.googleapis.com/bucket/default_profile.png",
                      },
                      "event": {
                        "id": 2,
                        "event_name": "Prambanan Jazz 2022"
                      }  
                    },
                    ]
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "id event not recognize",
                  }
                responseData2:
                  description: when token empty 
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get Attendee",
                  }
    delete:
      tags:
        - Attandees
      description: Ketika User Cancel event yang akan diikuti
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: attandees_id
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to delete attendee",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "status": "error",
                    "message": "id attendee not recognize",
                  }
                responseData2:
                  description: when token empty
                  value: {
                    "message": "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    "status": "error",
                    "message": "failed to attendee",
                  }
  /attendees/users:
    get:
      tags:
        - "Attandees"
      description: Melihat events yang akan diikuti user
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseToSeeAttandees'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get data",
                    data: 
                    [{
                      "id": 1,
                      "user": {
                        "id": 1,
                        "user_name": "Andri",
                        "image_url": "https://storage.googleapis.com/bucket/default_profile.png",
                      },
                      "event": {
                        "id": 2,
                        "event_name": "Prambanan Jazz 2022"
                      }  
                    },
                    {
                      "id": 2,
                      "user": {
                        "id": 1,
                        "user_name": "Andri",
                        "image_url": "https://storage.googleapis.com/bucket/default_profile.png",
                      },
                      "event": {
                        "id": 3,
                        "event_name": "Konser Sheila On 7"
                      }  
                    }]
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get attendee",
                  }
    
  /comments:
    post:
      tags:
        - Comments
      description: Ketika user memberi komentar sebuah event
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestComments'
            examples:
              userData1:
                description: "Example data  user 1"
                value: 
                  {
                    "event_id": 1,
                    "content": "eventnya sangat menarik"
                  }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    "status": "success",
                    "message": "success to insert comment",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "comment can't be empty",
                  }
                responseData2:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to insert comment",
                  }
  /comments/{idEvent}:
    get:
      tags:
        - "Comments"
      description: Ketika user ingin melihat komentar pada event
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: idEvent
          required: true
          schema:
            type: number
            example: 1
          description: event_id
        - in: query
          name: limit
          required: false
          schema:
            type: number
            example: 1
          description: limit
        - in: query
          name: offset
          required: false
          schema:
            type: number
            example: 1
          description: offset
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseComments'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    status: "success",
                    message: "success to get all data",
                    data: 
                    [{
                      "id" : 1,
                      "content": "eventnya sangat menarik",
                      "user": {
                        "id": 1,
                        "user_name": "Andri",
                        "full_name": "Andri Gunawan",
                        "image_url": "https://storage.googleapis.com/bucket/default_profile.png",
                      },
                      "event": {
                        "id": 1,
                      },
                      "created_at": "2022-07-07T02:46:10.595Z",
                    }]
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "id event not recognize",
                  }
                responseData2:
                  description: when token empty
                  value: {
                    message: "missing or malformed jwt",
                  }
        '500':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    status: "error",
                    message: "failed to get all data",
                  }

        

              

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  schemas:
    requestLogin:
      type: object
      properties:
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1

    responseUserSuccess:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }

    responseEventSuccess:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }
    
    requestRegistrasi:
      type: object
      properties:
        "full_name":
          type: string
          minLength: 1
        "user_name":
          type: string
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "phone_number":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
        "file":
          type: string
          format: binary

    requestUpdate:
      type: object
      properties:
        "full_name":
          type: string
          minLength: 1
        "user_name":
          type: string
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "phone_number":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
        "file":
          type: string
          format: binary
    requestEvent:
      type: object
      properties:
        "event_name":
          type: string
          minLength: 1
        "date_start":
          type: string
          minLength: 1
        "date_finish":
          type: string
          minLength: 1
        "start_at":
          type: string
          minLength: 1
        "finish_at":
          type: string
          minLength: 1
        "price":
          type: number
          minLength: 1
        "address":
          type: string
          minLength: 1
        "description":
          type: string
          minLength: 1
        "file":
          type: string
          format: binary
        "capacity":
          type: number
          minLength: 1
    responseToSeeAttandees:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }
    requestComments:
      type: object
      properties:
        "event_id":
          type: string
          minLength: 1
        "content":
          type: string
    responseComments:
      type: object
      properties: {
        "status": {
          type: string
        },
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }